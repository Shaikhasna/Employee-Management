{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sk.hasna\\\\Desktop\\\\Employee-Management\\\\employee-management-fresh\\\\src\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5002/api/employees').then(response => response.json()).then(data => setEmployees(data)).catch(error => console.error('Error fetching employee data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), employees.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: employee.name\n      }, employee._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No employees found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeList, \"/A1Ii8+9z2SDNTFDutGp9pjEZTU=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","employee","name","_id","_c","$RefreshReg$"],"sources":["C:/Users/sk.hasna/Desktop/Employee-Management/employee-management-fresh/src/EmployeeList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst EmployeeList = () => {\r\n    const [employees, setEmployees] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5002/api/employees')\r\n            .then((response) => response.json())\r\n            .then((data) => setEmployees(data))\r\n            .catch((error) => console.error('Error fetching employee data:', error));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Employee List</h2>\r\n            {employees.length > 0 ? (\r\n                <ul>\r\n                    {employees.map((employee) => (\r\n                        <li key={employee._id}>{employee.name}</li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No employees found</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,qCAAqC,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,YAAY,CAACK,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAChF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBd,SAAS,CAACe,MAAM,GAAG,CAAC,gBACjBlB,OAAA;MAAAa,QAAA,EACKV,SAAS,CAACgB,GAAG,CAAEC,QAAQ,iBACpBpB,OAAA;QAAAa,QAAA,EAAwBO,QAAQ,CAACC;MAAI,GAA5BD,QAAQ,CAACE,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELjB,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CAxBID,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}