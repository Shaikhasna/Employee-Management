{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sk.hasna\\\\Desktop\\\\Employee-Management\\\\employee-management-fresh\\\\src\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeList() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    // Fetch employee data from backend API\n    fetch('http://localhost:5002/api/employees') // Update this URL based on your backend URL\n    .then(response => response.json()).then(data => {\n      setEmployees(data); // Set the data in state\n    }).catch(error => {\n      console.error('Error fetching employee data:', error); // Handle errors\n    });\n  }, []); // The empty array ensures this effect runs only once, like componentDidMount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employees.length > 0 ? employees.map((employee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [employee.name, \" - \", employee.position, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No employees found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) // If no employees are returned\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeList, \"/A1Ii8+9z2SDNTFDutGp9pjEZTU=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","employee","index","name","position","_c","$RefreshReg$"],"sources":["C:/Users/sk.hasna/Desktop/Employee-Management/employee-management-fresh/src/EmployeeList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction EmployeeList() {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch employee data from backend API\r\n    fetch('http://localhost:5002/api/employees') // Update this URL based on your backend URL\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setEmployees(data); // Set the data in state\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching employee data:', error); // Handle errors\r\n      });\r\n  }, []); // The empty array ensures this effect runs only once, like componentDidMount\r\n\r\n  return (\r\n    <div>\r\n      <h1>Employee List</h1>\r\n      <ul>\r\n        {employees.length > 0 ? (\r\n          employees.map((employee, index) => (\r\n            <li key={index}>\r\n              {employee.name} - {employee.position} {/* Displaying employee data */}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No employees found</p> // If no employees are returned\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,qCAAqC,CAAC,CAAC;IAAA,CAC1CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,YAAY,CAACK,IAAI,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MAAAa,QAAA,EACGV,SAAS,CAACe,MAAM,GAAG,CAAC,GACnBf,SAAS,CAACgB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC5BrB,OAAA;QAAAa,QAAA,GACGO,QAAQ,CAACE,IAAI,EAAC,KAAG,EAACF,QAAQ,CAACG,QAAQ,EAAC,GAAC;MAAA,GAD/BF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL,CAAC,gBAEFjB,OAAA;QAAAa,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CA/BQD,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAiCrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}